[posted 241024 as helper file in FRC_Java Space on Perplexity]

codeFileGuide.txt -- this file should help interpret the contents of code and helper documents that are referenced in my FRC Java queries which will be contained in my FRC Java Space.

syntax peculiarity -- singular form of word often used to represent singular and plural possibility. text contain abbreviation for longer terms, with or without a terminal period (.) e.g. ref for reference. other abbrev. form: w/o for without, and the conventional latin abbrev.: v. for vide, cf. for compare, etc. In code comments, names of things may be abbrev.: rI instead of robotInit, tP for teleopPeriodic, rP for robotPeriodic, rC for RobotContainer, [file name].j for a Java coded doc, the char * for any character(s), / for a path separator,  | for an 'or' between list items, etc. bracket pair [ ] may indicate an as yet undefined variable or type; optional values / types for it can be separated by | symbol within the brackets.

a 'code document' is a formatted text file, which for these queries will normally be a .java file type. the Java code for robot control is found deep in the path tree of a Visual Studio Code project folder in the src folder. I abbrev the Microsoft IDE for these projects as "VScode" in my questions and comments.

for code files whose name ends in .java, the required Java syntax should be followed. If you see code lines containing violations of required syntax, then, if possible, you should put corrected code in their place, and explain why the correction was appropriate in a comment added before the corrected code. If you can't correct an error, write a comment explaining the problem and how it can be addressed by the human programmer. 

'comment' within a code document is text that explains | questions | criticizes the code that follows it. comment could contain useful metadata about the following code, to indicate its purpose, reason for having the current form, the meaning of a compile error returned by VScode, or other note from the programmer.

a 'helper document' (like this) could have postfix of .txt |.html | .md | .shtml | .pdf and does not require any particular formatting but if it's long and you want to call attention to a particular section, some char. or char pair (e.g. // or /*  */ pair) of your choice can be used to "highlight" your comment.

comment text within code follows Java conventions. example: one character set like // precedes a one line comment. a start-end  /*  */ char. pair or <!-- --> indicates a multi-line comment. In a helper document, a topic HEADING in all upper case should state the significance of the following text, possibly formatted code, and thus provides an indexing key for finding that text.

useful context sources for FRC Java queries, in addition to those specified with each new query thread, will be found in previous query threads in my FRC Java Space.

Java code for FRC robotics may only execute properly if a project's components, soft- and hardware, are version compatible. Unfortunately during the extended FRC build season (yearly Dec - Apr.) their code masters typically make repeated updates to device firmware, coding tools, NI Game Tools, etc. Therefore the year of creation, e.g. '23 (indicating 2023 build season) will often be relevant to functionality, and should be specified, when known, in the file descriptors, which are described next
  
doc (code and helper) descriptors:
sourceType: mostly nouns with optional modifier, e.g. template, example, fragment, framework, vendor, project, robot, command, subsystem, aux, helper, prototype, [number representing software / hardware compatibility] ...
sourceStatus: mostly adjective, e.g. functional, untested, in progress, local, final, archive ...
sourceContext: mostly noun, e.g. project name, robot type, number (date created), season (year) valid, purpose of code | helper doc